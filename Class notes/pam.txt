PAM模块 ,Pluggable Authentication Module,可插入的验证模块
  认证库:文本文件,MySQL,NIS,LADP等
  PAM关注于如何为服务验证用户的API,并通过提供一些动态链接库和一套统一的API,将系统提供的服务和该服务
  的认证方式分开
  使得系统管理员可以灵活根据需要给不同的服务配置不同的认证方式而无需更改应用程序
  PAM本身是一种认证框架,自身不做认证
  
PAM认证机制
1)提供了对所有服务进行认证的中央机制,适用于login,远程登陆(telnet,rlogin,fsh,ftp,点对点协议(PPP)),su等应用程序中;
系统管理员通过PAM配置文件来制定不同应用程序的不同认证策略;应用程序开发者通过在服务程序中使用PAM API(pam_xxxx())来实现对认证
方法的调用; PAM接口库(libpam)则读取配置文件,将应用程序和相应的PAM服务模块练习起来;

PAM相关配置
1)PAM模块文件路径:/lib64/security/*.so 
2)环境相关的设置:/etc/security/
3)主配置文件:/etc/pam.conf,默认不存在
4)为每种应用模块提供一个专用的配置文件:/etc/pam.d/APP_NAME (建议配置)
注意:若/etc/pam.d存在,/etc/pam.conf将失效

PAM认证原理
1)PAM认证一般顺序: Service(服务)--->PAM(配置文件)--->pam_*.so 
2)PAM认证首先要确定哪一项服务,然后加载相应的PAM配置文件(位于/etc/pam.d下),最后调用认证文件(位于/lib/security/下)进行安全认证

PAM认证机制
PAM认证过程:(当使用passwd命令修改用户密码时)
1)使用者执行/usr/bin/passwd程序,并输入密码
2)passwd调用PAM模块去搜寻passwd程序的PAM相关设置文件:在/etc/pam.d/里边的与程序同名的文件
3)经由/etc/pam.d/passwd设定文件的数据,取用所提供的相关模块来进行验证(cat /etc/pam.d/passwd,查看里面对应的模块文件:*.so文件(.so模块文件位于/lib/security/下))
4)将验证结果回传给passwd这个程序,而passwd这个程序会根据PAM回传的结果决定下一个动作(重新输入密码或者通过验证)

专用配置文件/etc/pam.d/*格式 
type  control  module-path arguments 
模块类型(type)
1)Auth: 账号的认证和授权
2)Account: 与账号相关的非认证类的功能,如:用来限制/允许用户对某个服务的访问时间,当前有效的系统资源(最多可以有多少个用户),限制用户的位置(例如:root用户只能从控制台登陆)
3)Password: 用户修改密码时密码复杂度检查机制等功能
4)Session: 用户获取到服务之前或使用服务完成后需要进行的一些附加的操作,如:记录打开/关闭数据的信息,监视目录等;
5)-type: 表示因为缺失而不能加载的模块将不记录到系统日志,而对于那些不总是安装在系统上的模块应用;如-session 

Control: 定义了PAM库如何处理与该服务相关的PAM模块成功或失败的情况
两种方式实现:
  简单和复杂
简单方式实现:
  required: 一票否决,表示本模块必须返回成功才能通过认证,但是若该模块返回失败,失败结果也不会立即通知用户,而是要等同一
            type中的所有模块全部执行完毕再将失败结果返回给应用程序.即为:必要条件
  
  requisite: 一票否决,该模块必须返回成功才能通过认证,但是一旦该模块返回失败,将不再执行同一type内的任何其它模块,而直接将
            控制权返回给应用程序,是一个必要条件;
			
  optional: 表明本模块是可选的,它的成功与否不对身份认证起关键作用,其返回值一般被忽略
  include: 调用其他的配置文件中定义的配置信息
  sufficient: 一票通过,表明本模块返回成功则通过身份认证的要求,不必再执行同一type内的其它模块,但若本模块返回
            失败则可忽略,即为:充分条件 

module-path: 模块路径
  1)相对路径:
	/lib64/security/目录下的模块可使用相对路径
	如:pam_shells.so,pam_limits.so 
  2)绝对路径:
	若对应的*.so模块文件不在/lib64/security/目录下,则需要写绝对路径

模块通过读取配置文件完成用户对系统资源的使用控制: /etc/security/*.conf 
注意: 修改PAM配置文件将马上生效
建议: 编辑pam规则时,保持至少打开一个root会话,以防止root身份验证错误
Arguments 用来传递给该模块的参数

实验:
1]添加对应的控制模块(也可添加到/etc/pam.d/login文件中)
vim /etc/pam.d/su 
添加一行内容:
auth required pam_shells.so 
2]修改用户默认shell
usermod -s /bin/csh tom 
3]从/etc/shells文件中注释掉/bin/csh
4]进行测试:
su - tom #发现不能切换用户(当前为root用户) 

pam文档说明
1)/usr/share/doc/pam-*
2)rpm -qd pam
3)man -k pam_
4)man 模块名 如man rootok 
5)<<The Linux-PAM System Administrator's Guide>>				
pam_time.so #该模块实现基于时间的控制
pam_deny.so #实现拒绝控制





